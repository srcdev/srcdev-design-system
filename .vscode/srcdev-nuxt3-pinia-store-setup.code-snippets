{
  "SRCDEV Pinia Options Store Boilerplate": {
    "description": "Bootstrap the code needed for a Vue.js Pinia Options Store file",
    "scope": "javascript,typescript",
    "body": [
      "import { defineStore, acceptHMRUpdate } from 'pinia'",
      "",
      "export const use${TM_FILENAME_BASE/^(.*)$/${1:/pascalcase}/}Store = defineStore('$TM_FILENAME_BASE', {",
      " state: () => ({",
      "   $0",
      " }),",
      " getters: {},",
      " actions: {},",
      "})",
      "",
      "if (import.meta.hot) {",
      " import.meta.hot.accept(acceptHMRUpdate(use${TM_FILENAME_BASE/^(.*)$/${1:/pascalcase}/}Store, import.meta.hot))",
      "}",
      ""
    ]
  },
  "SRCDEV Pinia Setup Store Boilerplate": {
    "description": "Bootstrap the code needed for a Vue.js Pinia Setup Store file",
    "scope": "javascript,typescript",
    "body": [
      "import { defineStore, acceptHMRUpdate } from 'pinia'",
      "",
      "export const use${TM_FILENAME_BASE/^(.*)$/${1:/pascalcase}/}Store = defineStore('$TM_FILENAME_BASE', () => {",
      "$0",
      "  // State",
      "  const someNumber = ref(2);",
      "  const someString = ref(\"Value\");",
      "  const someBoolean = ref(true);",
      "  const someNumbersArray = ref<number[]>([]);",
      "  const someStringArray = ref<string[]>([]);",
      "",
      "  // Getters",
      "  const numberValue = computed(() => someNumber.value);",
      "  const doubleNumberValue = computed(() => someNumber.value * 2);",
      "",
      "  // Actions",
      "  const increment = (amount = 1) => {",
      "    someNumber.value += amount;",
      "  };",
      "",
      "  return {",
      "    numberValue,",
      "    doubleNumberValue,",
      "    increment",
      "  };",
      "},",
      "{",
      "  persist: {",
      "    storage: piniaPluginPersistedstate.cookies(),",
      "  },",
      "}",
      "",
      "if (import.meta.hot) {",
      " import.meta.hot.accept(acceptHMRUpdate(use${TM_FILENAME_BASE/^(.*)$/${1:/pascalcase}/}Store, import.meta.hot))",
      "}"
    ]
  }
}
